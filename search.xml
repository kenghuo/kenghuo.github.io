<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>React 生命周期</title>
      <link href="/2018/07/23/react-lifecycle/"/>
      <url>/2018/07/23/react-lifecycle/</url>
      <content type="html"><![CDATA[<p>React 生命周期</p><hr><a id="more"></a><h1 id="React-生命周期"><a href="#React-生命周期" class="headerlink" title="React 生命周期"></a>React 生命周期</h1><ul><li>挂载阶段 <a href="#mount" target="_self">#</a></li><li>更新阶段 <a href="#update" target="_self">#</a></li><li>卸载阶段 <a href="#unmount" target="_self">#</a></li></ul><p><span id="mount"></span></p><h2 id="挂载阶段"><a href="#挂载阶段" class="headerlink" title="挂载阶段"></a>挂载阶段</h2><p>constructor(props) 初始化state 绑定this 通过super方法获取props<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">constructor(props)&#123;</span><br><span class="line">    super(props);                           // 继承父组件 props</span><br><span class="line">    this.state = &#123;                          // 初始化 state</span><br><span class="line">        count: 1</span><br><span class="line">    &#125;;</span><br><span class="line">    this.toggle = this.toggle.bind(this);   // 内部方法绑定 this</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>static getDerivedStateFromProps(props, state) 在调用 render 方法之前被调用，包括初始装载（mount）和后续更新时。 它应该返回一个更新 state(状态) 的对象，或者返回 null 不更新任何 state(状态)。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">static getDerivedStateFromProps(props, state) &#123;</span><br><span class="line">    if(props.user.id)&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            username: props.user.name</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    return null;    // 这里必须返回对象 否则报错</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>render() 生成虚拟 DOM<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">render()&#123;</span><br><span class="line">    return &lt;div&gt;&#123;this.state.count&#125;&lt;/div&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>componentDidMount dom树挂载时执行的操作 插入 DOM 树时调用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">componentDidMount()&#123;</span><br><span class="line">    document.getElementById(&apos;#random) = &apos;/path.jsp&apos;; // 登录验证码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><span id="update"></span></p><h2 id="更新阶段"><a href="#更新阶段" class="headerlink" title="更新阶段"></a>更新阶段</h2><p>componentDidUpdate(prevProps, prevState) dom 更新时调用, props 以及 state 发生改变都会调用该函数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">componentDidUpdate(prevProps, prevState) &#123;</span><br><span class="line">    if(this.props.user.id !== prevProps.user.id)&#123; // 这里setState 必须放在 条件判断中, 否则会发生死循环</span><br><span class="line">        console.log(&apos;又一个&apos;);</span><br><span class="line">        this.setState(&#123;</span><br><span class="line">            count: this.state.count++</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>UNSAFE_componentWillReceiveProps(nextProps) props 发生改变调用函数 将来会被弃用, 尽量避免出现, 可以使用上述 钩子函数替代<br><figure class="highlight plain"><figcaption><span>更新</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">UNSAFE_componentWillReceiveProps(nextProps) &#123;</span><br><span class="line">    if(nextProps.user.id !== this.props.user.id)&#123; // 理由同上</span><br><span class="line">        console.log(&apos;又一个&apos;);</span><br><span class="line">        this.setState(&#123;</span><br><span class="line">            count: this.state.count++</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><span id="unmount"></span></p><h2 id="卸载阶段"><a href="#卸载阶段" class="headerlink" title="卸载阶段"></a>卸载阶段</h2><p>componentWillUnmount() 组件将要卸载 卸载定时器、清理redux数据等等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">componentWillUnmount() &#123;</span><br><span class="line">    clearTimeout(this.timer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>React 遇到的坑</title>
      <link href="/2018/07/20/react/"/>
      <url>/2018/07/20/react/</url>
      <content type="html"><![CDATA[<p>曾经在React中踩过的大大小小的坑</p><hr><a id="more"></a><p>曾经踩过的坑</p><h3 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">constructor(props)&#123;</span><br><span class="line">    super(props)</span><br><span class="line">    this.state = &#123;</span><br><span class="line">        title: &apos;测&amp;nbsp;&amp;nbsp;试&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;p&gt;&#123;&#123;this.state.title&#125;&#125;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>显示结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测&amp;nbsp;&amp;nbsp;试</span><br></pre></td></tr></table></figure><p>这里字符串使用转义字符<br>需要用到dangerouslySetInnerHTML</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">constructor(props)&#123;</span><br><span class="line">    super(props)</span><br><span class="line">    this.state = &#123;</span><br><span class="line">        title: &apos;测&amp;nbsp;&amp;nbsp;试&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;p dangerouslySetInnerHTML=&#123;&#123;_html:this.state.title&#125;&#125; &gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>这样才会正常显示title内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">测  试</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> React </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>搭建个人博客</title>
      <link href="/2018/07/20/blog/"/>
      <url>/2018/07/20/blog/</url>
      <content type="html"><![CDATA[<p>搭建个人博客的方法</p><hr><a id="more"></a><h3 id="注册github账号"><a href="#注册github账号" class="headerlink" title="注册github账号"></a>注册github账号</h3><p><a href="https://github.com/">注册地址</a></p><h3 id="创建个人仓库"><a href="#创建个人仓库" class="headerlink" title="创建个人仓库"></a>创建个人仓库</h3><p>登录账户之后 &gt; new repository(注意再次之前需要登录邮箱验证账户) &gt; 进入 Settings 找到 GitHub Pages &gt; choose a theme &gt;</p><p>之后再次进入 Settings 在 GitHub Pages 位置多出来 <strong>Your site is published at <a href="https://kenghuo.github.io/" target="_blank" rel="noopener">https://kenghuo.github.io/</a></strong> 表示博客创建成功 点击链接可以进入当前博客</p><p>如果想要使用类似 <strong><a href="https://kenghuo.github.io/" target="_blank" rel="noopener">https://kenghuo.github.io/</a></strong> 这样的域名作为博客地址, 需要仓库名称与账号名称一致</p><p>否则的话你的博客地址会变成这样 <strong><a href="https://kenghuo.github.io/akang.github.io/" target="_blank" rel="noopener">https://kenghuo.github.io/akang.github.io/</a></strong></p><h3 id="克隆代码到本地"><a href="#克隆代码到本地" class="headerlink" title="克隆代码到本地"></a>克隆代码到本地</h3><p>进入已经创建好的个人仓库</p><p>有个绿色的按钮 clone and download</p><p>可以使用git 或者直接下载压缩包 Download ZIP</p><ul><li><p><strong>git clone <a href="https://github.com/kenghuo/kenghuo.github.io.git">https://github.com/kenghuo/kenghuo.github.io.git</a> dirname</strong></p><p>或者 <strong>git clone <a href="mailto:git@github.com">git@github.com</a>:kenghuo/kenghuo.github.io.git dirname</strong> 都可以</p><p>dirname 为下载完成的文件夹名称 可以自定义</p></li><li><p>点击 Download ZIP 下载压缩包 解压缩也可以得到完整的项目</p></li></ul><h3 id="编译博客页面"><a href="#编译博客页面" class="headerlink" title="编译博客页面"></a>编译博客页面</h3><p>也可以通过HTML可以自定义页面 入口文件名称为 <strong>index.html</strong></p>]]></content>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>markdown 基本语法</title>
      <link href="/2018/07/20/markdown/"/>
      <url>/2018/07/20/markdown/</url>
      <content type="html"><![CDATA[<p>markdown 语法</p><a id="more"></a><p>Markdown 是一种轻量级标记语言，这个语言的目的是希望大家使用“易于阅读、易于撰写的纯文字格式，并选择性的转换成有效的 XHTML（或是 HTML）”</p><p>请注意，在 HTML 区块标签间的 Markdown 格式语法将不会被处理。</p><p><a href="https://github.com/DavidAnson/markdownlint/blob/v0.10.0/doc/Rules.md">英文参考文献</a>(<a href="https://github.com/DavidAnson/markdownlint/blob/v0.10.0/doc/Rules.md">https://github.com/DavidAnson/markdownlint/blob/v0.10.0/doc/Rules.md</a>)<br><a href="https://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">英文参考文献</a>(<a href="https://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">https://daringfireball.net/projects/markdown/syntax</a>)</p><p><a href="http://www.markdown.cn/" target="_blank" rel="noopener">中文参考文献</a>(<a href="http://www.markdown.cn/" target="_blank" rel="noopener">http://www.markdown.cn/</a>)<br><a href="https://github.com/younghz/Markdown">中文参考文献</a>(<a href="https://github.com/younghz/Markdown">https://github.com/younghz/Markdown</a>)</p><p>Markdown 完全支持 HTML 语法<br>Markdown 完全支持 HTML 语法<br>Markdown 完全支持 HTML 语法</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>同 html h1 ~ h6</p><p>文字前加 <strong>#</strong> 个数表示标题大小, 越少越大(注意一级标题下存在下划线)<br>此外, 一行文本之后添加 = 或者 - 也可以作为一级或者二级标题出现</p><p>符号数量任意</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">一级标题</span><br><span class="line">===</span><br><span class="line"></span><br><span class="line">二级标题</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>数字加上 <strong>.</strong>(英文句号) 加个空格 即可构成有序列表<br>数字可以随意写, markdown语法会自动调整为顺序编码</p><ol><li>水果<ol><li>苹果</li><li>香蕉</li></ol></li><li>蔬菜</li><li>小麦</li></ol><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p><strong>*</strong>  <strong>-</strong>  <strong>+</strong>  <strong>.</strong> 加个空格 即可构成无序列表<br>同级列表项前的符号保持一致<br>下级子列表 仅需要缩进一格</p><ul><li>测试1<ul><li>测试1.1<ul><li>测试1.1.1</li></ul></li><li>测试1.2</li><li>测试1.3</li></ul></li><li>测试2</li><li>测试3</li></ul><h2 id="插入url"><a href="#插入url" class="headerlink" title="插入url"></a>插入url</h2><p><strong>[ ]</strong> <strong>( )</strong> 两个符号构成 <strong>[ ]</strong> 描述性文字 <strong>( )</strong> 链接地址<br><strong>[ ]</strong> 放的是 a 标签里的文字信息 <strong>( )</strong> 路径地址<br>同 html的 a 标签 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;https://www.baidu.com/&quot; title=&quot;类似 html 的title&quot; &gt;百度&lt;/a&gt; </span><br><span class="line"></span><br><span class="line">[百度](https://www.baidu.com/) 行内式</span><br><span class="line"></span><br><span class="line">[百度][baidu]</span><br><span class="line"></span><br><span class="line">[baidu]:https://www.baidu.com/ &quot;类似 html 的title&quot; 参考式 可以放在任意位置 比如文本末尾处</span><br></pre></td></tr></table></figure><p>效果</p><p><a href="https://www.baidu.com/" title="类似 html 的title" target="_blank" rel="noopener">百度</a> </p><p><a href="https://www.baidu.com/" target="_blank" rel="noopener">百度</a></p><p><a href="https://www.baidu.com/" title="类似 html 的title" target="_blank" rel="noopener">百度</a></p><h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2><p><strong>!</strong> <strong>[ ]</strong> <strong>( )</strong> 这三个部分构成图片样式 !是加载图片的标志性符号<br><strong>[ ]</strong> 注释性文字  <strong>( )</strong> 图片路径 可以使用相对路径 也可以使用绝对路径</p><p>同 html 的 img 标签 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;/img/&quot; alt=&quot;百度&quot; /&gt;</span><br><span class="line"></span><br><span class="line">![百度](/img/cat.png)</span><br><span class="line"></span><br><span class="line">![不存在的图片](#)</span><br></pre></td></tr></table></figure><p>效果</p><p><img src="https://www.baidu.com/img/bd_logo1.png" alt="百度"></p><p><img src="/img/cat.png" alt="喵"></p><p><img src="#" alt="不存在的图片"></p><h2 id="粗体、斜体、删除线"><a href="#粗体、斜体、删除线" class="headerlink" title="粗体、斜体、删除线"></a>粗体、斜体、删除线</h2><p>粗体：在文字前后添加 *<em> 或者 __ (注意符号与文字间不要有空格, 开始标记和结尾标记一致)<br>斜体：在文字前后添加 </em> 或者 _<br>删除线：在文字前后添加 ~~</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">测试 正常文字样式</span><br><span class="line"></span><br><span class="line">测试 __粗体文字样式__</span><br><span class="line"></span><br><span class="line">测试 _斜体文字样式_</span><br><span class="line"></span><br><span class="line">测试 ~~删除线文字样式~~</span><br></pre></td></tr></table></figure><p>测试 正常文字样式</p><p>测试 <strong>粗体文字样式</strong></p><p>测试 <em>斜体文字样式</em></p><p>测试 <del>删除线文字样式</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>在文字前面加上 <strong>&gt;</strong><br>引用支持嵌套</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; To do or not to do, this is a problem  -- Shakespeare</span><br><span class="line"></span><br><span class="line">&gt; 这里是一级引用  </span><br><span class="line">&gt; &gt; 可以在后边嵌套.</span><br><span class="line">&gt; &gt; &gt; 甚至可以是多个嵌套等级.</span><br></pre></td></tr></table></figure><blockquote><p>To do or not to do, this is a problem  – Shakespeare</p></blockquote><blockquote><p>这里是一级引用  </p><blockquote><p>可以在后边嵌套.</p><blockquote><p>甚至可以是多个嵌套等级.</p></blockquote></blockquote></blockquote><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>两个 <strong>|</strong> 之间是一个单元格<br>表头与表格主体之间通过 - (任意数量英文减号) 分割<br>分割线单元格数量不少于行内单元格, 比如每行有三个单元格, 分割线大于等于三个<br>行与行之间不要有空行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| 姓名 | 地址 | 标题 |</span><br><span class="line">|-|-|-|</span><br><span class="line">| 阿康 | kenghuo.github.io | markdown |</span><br><span class="line">| 每行 | 单元格数量一样 | 不然就不是表格了 |</span><br></pre></td></tr></table></figure><table><thead><tr><th>姓名</th><th>地址</th><th>标题</th></tr></thead><tbody><tr><td>阿康</td><td>kenghuo.github.io</td><td>markdown</td></tr><tr><td>每行</td><td>单元格数量一样</td><td>不然就不是表格了</td></tr></tbody></table><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">前后添加  __```__ </span><br><span class="line"></span><br><span class="line">注意前边符号写完后需要换行</span><br><span class="line"></span><br><span class="line">因此可以不换行加上注释性内容, 而不会出现在代码块中</span><br></pre></td></tr></table></figure><p><img src="/img/area.png" alt="代码块"></p><p>效果如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for (let i = 0; i &lt; 10; i++)&#123;</span><br><span class="line">    console.log(&quot;hello markdown!&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>同一段落内换行, 可以在 需要换行的地方 两个空格 回车</p><p>段落换行, 需要文字之间出现空行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">段落内部换行  (两个空格)</span><br><span class="line">换行</span><br><span class="line"></span><br><span class="line">段落1</span><br><span class="line"></span><br><span class="line">段落2</span><br></pre></td></tr></table></figure><p>效果</p><p>段落内部换行<br>换行</p><p>段落1</p><p>段落2</p>]]></content>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
